name: Build IPQ807x NSS WiFi

on: workflow_dispatch

jobs:
    build:
        name: Prepare and build IPQ807x NSS generic images
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4
      
            - name: Check server configuration
              run: |
                echo "警告⚠"
                echo "若分配的服务器性能不足，务必及时取消，重新运行！"
                echo "已知编译成功CPU型号：8370C,8171M"
                echo "已知性能不足CPU型号：8272CL"
                echo -e "-------------- ------------CPU信息------------------------------------------\n"
                echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
                echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
                echo "-------------------------------内存信息-------------------------------------------"
                echo "已安装内存详细信息："
                sudo lshw -short -C memory | grep GiB
                echo -e "\n"
                echo "-----------------------------硬盘信息---------------------------------------------"
                echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
                echo "硬盘详情："
                df -Th

            - name: Initialization environment
              env:
                DEBIAN_FRONTEND: noninteractive
              run: |
                docker rmi `docker images -q`
                sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
                sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap* aspnetcore*
                [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                #sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
                sudo -E apt update
                sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
                sudo -E apt-get -qq install libfuse-dev
                sudo -E apt-get -qq install lib32z1-dev
                sudo -E apt -y autoremove --purge
                sudo -E systemctl daemon-reload
                sudo -E apt clean
                sudo timedatectl set-timezone "$TZ"
                sudo mkdir -p /workdir
                sudo chown $USER:$GROUPS /workdir
                echo "status=success" >> ${GITHUB_OUTPUT}
                df -Th

            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a

            - name: Import full config for IPQ807x NSS Generic
              run: |
                mv .full_config .config

            - name: QoL fixes on default config
              run: |
                mkdir -p files/etc/uci-defaults
                cat > files/etc/uci-defaults/99-qol_fixes << EOF
                uci set wireless.radio0.country='US'
                uci set wireless.radio1.country='US'
                uci set wireless.radio2.country='US'
                uci set wireless.radio1.disabled=0
                uci set wireless.radio2.disabled=0
                uci set pbuf.opt.memory_profile=1gb
                uci set network.globals.packet_steering=0
                uci set firewall.@defaults[0].flow_offloading=0
                uci set ecm.@general[0].enable_bridge_filtering=0
                uci commit
                /etc/init.d/firewall restart
                /etc/init.d/qca-nss-ecm restart
                EOF

            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s

            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s

            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s

            - name: Get the current date
              run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV

            - name: Create a release
              uses: "ncipollo/release-action@v1"
              with:
                name: "Updated prebuilt images (NSS-WiFi) ${{ env.NOW }}"
                commit: "main_nss"
                tag: "ipq807x-nsswifi-${{ env.NOW }}"
                generateReleaseNotes: true
                makeLatest: true
                artifacts: bin/targets/qualcommax/ipq807x/*
                token: "${{ secrets.GITHUB_TOKEN }}"
